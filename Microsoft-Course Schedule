class Solution {
public:
    bool checkCycle(int node,vector<bool>&vis,vector<bool>&dfsVis,vector<int>adj[]){
        vis[node]=true;
        dfsVis[node]=true;
        vector<int>data = adj[node];
        for(auto it:data){
            if(!vis[it]){
                 if(checkCycle(it,vis,dfsVis,adj)){
                    return true;
                }
            }
               
            else{
                if(dfsVis[it]){
                    return true;
                }
                    
            }
        }
        dfsVis[node]=false;
        return false;
    }
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int V= numCourses;
        vector<int> adj[V];
        for(auto x: prerequisites){
            vector<int>data=x;
            int a = data[0];
            int b = data[1];
            adj[a].push_back(b);
        }
        vector<bool>vis(V,0),dfsVis(V,0);
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(checkCycle(i,vis,dfsVis,adj))
                    return false;
            }
        }
        return true;
    }
};
