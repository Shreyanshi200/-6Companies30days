class Solution {
public:
    int dp[12][1000001];
    int helper(int i,int numArrows,vector<int>&aliceArrows){
        if(i==12||numArrows<=0){
            return 0;
        }
        if(dp[i][numArrows]!=-1){
            return dp[i][numArrows];
        }
        int maxScore = helper(i+1,numArrows,aliceArrows);
        if(numArrows>aliceArrows[i]){
            maxScore = max(maxScore,helper(i+1,numArrows-aliceArrows[i]-1,aliceArrows)+i);
        }
        return dp[i][numArrows] = maxScore;
    }
    vector<int> maximumBobPoints(int numArrows, vector<int>& aliceArrows) {
        memset(dp,-1,sizeof(dp));
        vector<int>ans(12);
        int remainArrows = numArrows;
        for(int i=0;i<12;i++){
            if(helper(i,numArrows,aliceArrows)!=helper(i+1,numArrows,aliceArrows)){
                ans[i]=aliceArrows[i]+1;
                remainArrows -=ans[i];
                numArrows -= ans[i];
            }
        }
        ans[0]+=remainArrows;
        return ans;
    }
};
